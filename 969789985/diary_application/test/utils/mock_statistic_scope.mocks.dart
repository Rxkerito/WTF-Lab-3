// Mocks generated by Mockito 5.3.2 from annotations
// in diary_application/test/utils/mock_statistic_scope.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:bloc/bloc.dart' as _i10;
import 'package:diary_application/src/core/domain/models/local/activity/activity_model.dart'
    as _i9;
import 'package:diary_application/src/core/domain/models/local/chat/chat_model.dart'
    as _i3;
import 'package:diary_application/src/core/domain/models/local/message/message_model.dart'
    as _i7;
import 'package:diary_application/src/core/domain/repository/statistic/api_statistic_repository.dart'
    as _i11;
import 'package:diary_application/src/core/util/resources/strings.dart' as _i8;
import 'package:diary_application/src/feature/cubit/statistic/statistic_cubit.dart'
    as _i2;
import 'package:fast_immutable_collections/fast_immutable_collections.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStatisticState_0 extends _i1.SmartFake
    implements _i2.StatisticState {
  _FakeStatisticState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_1 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatModel_2 extends _i1.SmartFake implements _i3.ChatModel {
  _FakeChatModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIList_3<T> extends _i1.SmartFake implements _i4.IList<T> {
  _FakeIList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString([bool? prettyPrint]) => super.toString();
}

class _Fake$StatisticStateCopyWith_4<$Res> extends _i1.SmartFake
    implements _i2.$StatisticStateCopyWith<$Res> {
  _Fake$StatisticStateCopyWith_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStream_5<T> extends _i1.SmartFake
    implements _i5.ValueStream<T> {
  _FakeValueStream_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StatisticCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockStatisticCubit extends _i1.Mock implements _i2.StatisticCubit {
  MockStatisticCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StatisticState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeStatisticState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.StatisticState);
  @override
  _i6.Stream<_i2.StatisticState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i2.StatisticState>.empty(),
      ) as _i6.Stream<_i2.StatisticState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  DateTime messagesGraphXAxis(_i7.MessageModel? message) => (super.noSuchMethod(
        Invocation.method(
          #messagesGraphXAxis,
          [message],
        ),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.method(
            #messagesGraphXAxis,
            [message],
          ),
        ),
      ) as DateTime);
  @override
  int messagesGraphYAxis(
    _i4.IList<_i7.MessageModel>? messages,
    _i7.MessageModel? comparedMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #messagesGraphYAxis,
          [
            messages,
            comparedMessage,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  void updateMessageDateSelection(_i8.MessageDateChartSelections? selection) =>
      super.noSuchMethod(
        Invocation.method(
          #updateMessageDateSelection,
          [selection],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> updateEntryTime() => (super.noSuchMethod(
        Invocation.method(
          #updateEntryTime,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> addActivity(_i9.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #addActivity,
          [activity],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updateActivity(_i9.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [activity],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> dispatchAction() => (super.noSuchMethod(
        Invocation.method(
          #dispatchAction,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  int averageOfMinutes() => (super.noSuchMethod(
        Invocation.method(
          #averageOfMinutes,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i3.ChatModel mostUsedChat(
    _i4.IList<_i3.ChatModel>? chats,
    _i4.IList<_i7.MessageModel>? messages,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #mostUsedChat,
          [
            chats,
            messages,
          ],
        ),
        returnValue: _FakeChatModel_2(
          this,
          Invocation.method(
            #mostUsedChat,
            [
              chats,
              messages,
            ],
          ),
        ),
      ) as _i3.ChatModel);
  @override
  void emit(_i2.StatisticState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i10.Change<_i2.StatisticState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StatisticState].
///
/// See the documentation for Mockito's code generation for more information.
class MockStatisticState extends _i1.Mock implements _i2.StatisticState {
  MockStatisticState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.IList<_i9.ActivityModel> get activities => (super.noSuchMethod(
        Invocation.getter(#activities),
        returnValue: _FakeIList_3<_i9.ActivityModel>(
          this,
          Invocation.getter(#activities),
        ),
      ) as _i4.IList<_i9.ActivityModel>);
  @override
  _i4.IList<_i7.MessageModel> get messages => (super.noSuchMethod(
        Invocation.getter(#messages),
        returnValue: _FakeIList_3<_i7.MessageModel>(
          this,
          Invocation.getter(#messages),
        ),
      ) as _i4.IList<_i7.MessageModel>);
  @override
  _i4.IList<DateTime> get datesRange => (super.noSuchMethod(
        Invocation.getter(#datesRange),
        returnValue: _FakeIList_3<DateTime>(
          this,
          Invocation.getter(#datesRange),
        ),
      ) as _i4.IList<DateTime>);
  @override
  DateTime get entryTime => (super.noSuchMethod(
        Invocation.getter(#entryTime),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.getter(#entryTime),
        ),
      ) as DateTime);
  @override
  int get yMax => (super.noSuchMethod(
        Invocation.getter(#yMax),
        returnValue: 0,
      ) as int);
  @override
  _i8.MessageDateChartSelections get dateSelection => (super.noSuchMethod(
        Invocation.getter(#dateSelection),
        returnValue: _i8.MessageDateChartSelections.lastWeek,
      ) as _i8.MessageDateChartSelections);
  @override
  _i2.$StatisticStateCopyWith<_i2.StatisticState> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$StatisticStateCopyWith_4<_i2.StatisticState>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i2.$StatisticStateCopyWith<_i2.StatisticState>);
}

/// A class which mocks [ApiStatisticRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiStatisticRepository extends _i1.Mock
    implements _i11.ApiStatisticRepository {
  MockApiStatisticRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ValueStream<_i4.IList<_i9.ActivityModel>> get activities =>
      (super.noSuchMethod(
        Invocation.getter(#activities),
        returnValue: _FakeValueStream_5<_i4.IList<_i9.ActivityModel>>(
          this,
          Invocation.getter(#activities),
        ),
      ) as _i5.ValueStream<_i4.IList<_i9.ActivityModel>>);
  @override
  _i6.Future<void> addActivity(_i9.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #addActivity,
          [activity],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> updateActivity(_i9.ActivityModel? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [activity],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> deleteActivity(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #deleteActivity,
          [activityId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
